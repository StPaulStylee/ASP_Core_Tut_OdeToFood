@page
@model OdeToFood.Pages.Restaurants.ListModel
@{
    ViewData["Title"] = "List";
}

<h2>Restaurants!!</h2>

@* Since this form as no action attribute, the get request sends the request to /Restaruants/List *@
<form method="get">
    <div class="form-group">
        <div class="input-group">
            @* The asp-for attr is like two way data binding. It sets the name of the input using the provided
                model property (ListModel.SearchTerm) as well as the value for the input and model using the value of the bound property*@
            <input type="search" class="form-control"  asp-for="SearchTerm"/>
            <span class="input-group-btn">
                <button class="btn btn-default">
                    <i class="glyphicon glyphicon-search"></i>
                </button>
            </span>
        </div>
    </div>
</form>
<table class="table">
    @foreach(var restaruant in Model.Restaurants)
    {
        <tr>
            <td>@restaruant.Name</td>
            <td>@restaruant.Location</td>
            <td>@restaruant.Cuisine</td>
            <td>
                @* Go to the detail page and pass/route this parameter with the request to get the page
        The asp-route-... must match the parameter name given in the OnGet method of the model*@
                <a class="btn btn-lg" asp-page="./Detail" asp-route-restaurantId="@restaruant.Id">
                    <i class="glyphicon glyphicon-zoom-in"></i>
                </a>
                <a class="btn btn-lg" asp-page="./Edit" asp-route-restaurantId="@restaruant.Id">
                    <i class="glyphicon glyphicon-edit"></i>
                </a>
            </td>
        </tr>
    }
</table>
<div>
    @Model.Message
</div>
